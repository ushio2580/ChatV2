version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chat-platform-db
    environment:
      POSTGRES_DB: chat_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat-network

  # Redis (for session management and real-time features)
  redis:
    image: redis:7-alpine
    container_name: chat-platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chat-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chat-platform-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/chat_platform?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      SOCKET_CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - chat-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chat-platform-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - chat-network

volumes:
  postgres_data:
  redis_data:

networks:
  chat-network:
    driver: bridge
